# Application Configuration
# Configure basic server settings and logging behavior
# Customize these settings to match your deployment environment

# Server Port Configuration
# Specify the port on which your application will run
# Default is 80 for HTTP, 443 for HTTPS
PORT=443

# SSL/HTTPS Configuration
# Enable secure HTTPS connections
# Set to 'true' to require SSL certificate
SSL=true

# Logging and Debugging Configuration
# Control the verbosity and logging behavior of the application
# LOG_LEVEL: Determines the detail of logged information (debug, info, warn, error)
LOG_LEVEL=debug
# LOG_REQUEST: Enable/disable request logging for monitoring and troubleshooting
LOG_REQUEST=false

### Oracle Database Configuration

# Oracle Database Configuration Guide
# This .env.example file provides a template for configuring Oracle database connections securely.
# Copy this file to .env and replace the placeholders with your actual database credentials.

# Database Authentication
# Example: ORACLE_USER=system or ORACLE_USER=your_service_account
ORACLE_USER=oracleuser

# Database Password
# Example: ORACLE_PASSWORD=Str0ng_P@ssw0rd_2023!
ORACLE_PASSWORD=oraclepassword

# Connection String Formats:
# 1. Easy Connect: hostname:port/service_name
# 2. TNS Name: (DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=hostname)(PORT=port))(CONNECT_DATA=(SERVICE_NAME=service_name)))
ORACLE_CONNECT_STRING=host:port/service_name

# Optional SSL Certificate Configuration
# Modify according to your CA's certificate details
ORACLE_CERT_DN='CN=<Common Name>, OU=<Org Unit>, O=<Org>, L=<Location>, ST=<State>, C=<Country>'

# Connection Pool Configuration (Optional)
ORACLE_POOL_ALIAS=main_pool
ORACLE_POOL_MIN=2
ORACLE_POOL_MAX=20
ORACLE_POOL_INCREMENT=1
ORACLE_POOL_TIMEOUT=60
ORACLE_QUEUE_TIMEOUT=60000
ORACLE_ENABLE_STATS=true

# Oracle Client Configuration for Docker
# This path should match the volume mount point in the Dockerfile
TNS_ADMIN=/usr/lib/oracle/21/client64/lib/network/admin
LD_LIBRARY_PATH=/usr/lib/oracle/21/client64/lib
