# Application Configuration
# Configure basic server settings and logging behavior
# Customize these settings to match your deployment environment

# Server Port Configuration
# Specify the port on which your application will run
# Default is 80 for HTTP, 443 for HTTPS
PORT=80

# SSL/HTTPS Configuration
# Enable secure HTTPS connections
# Set to 'true' to require SSL certificate
SSL=false

# Logging and Debugging Configuration
# Control the verbosity and logging behavior of the application
# LOG_LEVEL: Determines the detail of logged information (debug, info, warn, error)
LOG_LEVEL=debug
# LOG_REQUEST: Enable/disable request logging for monitoring and troubleshooting
LOG_REQUEST=true 

# JSON API Configuration
# Enable/disable JSON API functionality
# Set to 'false' to disable JSON-based endpoints
# When disabled, only database-backed endpoints will be available
JSON_ENABLED=true


### Oracle Database Configuration
# Oracle Database Configuration
# Enable/disable Oracle database functionality
# Set to 'false' to disable Oracle database features
ORACLE_ENABLED=false

# Oracle Database Configuration Guide
# This .env.example file provides a template for configuring Oracle database connections securely.
# Copy this file to .env and replace the placeholders with your actual database credentials.

# Database Authentication
# Example: ORACLE_USER=system or ORACLE_USER=your_service_account
ORACLE_USER=your_database_username

# Database Password
# Example: ORACLE_PASSWORD=Str0ng_P@ssw0rd_2023!
ORACLE_PASSWORD=your_secure_password

# Connection String Formats:
# 1. Easy Connect: hostname:port/service_name
# 2. TNS Name: (DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=hostname)(PORT=port))(CONNECT_DATA=(SERVICE_NAME=service_name)))
ORACLE_CONNECT_STRING=hostname:port/service_name

# Optional SSL Certificate Configuration
ORACLE_CERT_DN=/path/to/certificate

# Connection Pool Configuration (Optional)
ORACLE_POOL_ALIAS=main_pool
ORACLE_POOL_MIN=2
ORACLE_POOL_MAX=20
ORACLE_POOL_INCREMENT=1
ORACLE_POOL_TIMEOUT=60
ORACLE_QUEUE_TIMEOUT=60000
ORACLE_ENABLE_STATS=true

# Oracle Client Configuration
# Two modes available: Thin (default) and Thick mode

# Thick Mode Configuration
# Requires Oracle Client or Oracle Instant Client libraries
# Set ORACLE_DRIVER_MODE=thin to explicitly disable thick mode
# Default is thick mode
ORACLE_DRIVER_MODE=thick

# For Windows and macOS Intel platforms (Thick mode):
# Set NODE_ORACLEDB_CLIENT_LIB_DIR to the Oracle Client library directory
# Example Windows: NODE_ORACLEDB_CLIENT_LIB_DIR=C:\oracle\instantclient_19_8
# Example macOS: NODE_ORACLEDB_CLIENT_LIB_DIR=/opt/oracle/instantclient_19_8
# NODE_ORACLEDB_CLIENT_LIB_DIR=

# For Linux and other platforms (Thick mode):
# The Oracle library directory must be in the system library search path
# before starting Node.js to avoid DPI-1047 errors
# Add these to your system environment:
# LD_LIBRARY_PATH=/usr/lib/oracle/23/client64/lib
# TNS_ADMIN=/usr/lib/oracle/23/client64/lib/network/admin